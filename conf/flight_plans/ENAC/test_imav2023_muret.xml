<?xml version="1.0"?>
<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">
<flight_plan alt="215" ground_alt="185" lat0="43.4625" lon0="1.27288" max_dist_from_home="250" name="Muret safety" security_height="10" home_mode_height="30">
  <header>
    #define FP_NONE       0
    #define FP_ENDURANCE  1
    #define FP_MAPPING    2
    #define FP_DYNAMIC    3
    #define FP_HICKERS    4

    #if DIGITAL_CAM
    #define LINE_START_FUNCTION dc_Survey(mapping_shot_distance);
    #define LINE_STOP_FUNCTION dc_autoshoot = DC_AUTOSHOOT_STOP;
    #endif

    #ifdef NAV_C
    #ifndef TAG_TRACKING_COORD_TO_M
    #define TAG_TRACKING_COORD_TO_M (1.f / 1000.f)
    #ifdef SITL
    #define jevois_stream(_x) {}
    #endif
    #endif

    static void fp_tag_cb(uint8_t sender_id UNUSED,
        uint8_t type, char * id UNUSED,
        uint8_t nb UNUSED, int16_t * coord, uint16_t * dim UNUSED,
        struct FloatQuat quat UNUSED, char * extra UNUSED)
    {
      if (type == JEVOIS_MSG_D3) {
        tag_distance = coord[2] * TAG_TRACKING_COORD_TO_M;
        tag_valid = true;
      }
    }
    
    static inline bool delay_test_rc(bool test, int delay) {
      static int nb = 0;
        if (test) {
        nb++;
        if (nb == delay) {
          nb = 0;
          return true;
        }
        return false;
      } else {
        nb = 0;
        return false;
      }
    }

    static inline float avoid_height(float normal_height, float avoid_height, float avoid_dist, uint8_t wp_id) {
      if (LessThan(get_dist2_to_waypoint(wp_id), avoid_dist*avoid_dist)) {
        return avoid_height;
      } else {
        return normal_height;
      }
    }

    #endif
  </header>
  <waypoints>
    <waypoint name="HOME" x="40.256" y="59.629"/>
    <waypoint name="STDBY" x="-8.6" y="1.9"/>
    <waypoint name="LANDPAD" x="-19.9" y="-4.5"/>
    <waypoint name="TAG" x="-25.9" y="38.4"/>
    
    <waypoint name="SILENT" x="30.3" y="21.3"/>
    
    <waypoint name="HICKERS" x="55.617" y="83.606"/>
    <waypoint name="ENDURANCE" x="33.453" y="93.523"/>
    <waypoint name="START_DYN" x="10" y="10"/>
    
    <waypoint name="D1" x="108.724" y="-22.013"/>
    <waypoint name="D2" x="-70.894" y="48.611"/>
    <waypoint name="D3" x="-18.653" y="178.684"/>
    <waypoint name="D4" x="155.787" y="108.568"/>
    <waypoint name="P1" x="-7.4" y="51.3"/>
    <waypoint name="P2" x="85.3" y="13.8"/>
    <waypoint name="_FLY1" x="-58.218" y="233.713"/>
    <waypoint name="_FLY2" x="242.538" y="145.974"/>
    <waypoint name="_FLY3" x="197.631" y="-75.443"/>
    <waypoint name="_FLY4" x="-156.512" y="16.249"/>
    <waypoint name="_KILL1" x="-67.8" y="259.468"/>
    <waypoint name="_KILL2" x="261.724" y="158.522"/>
    <waypoint name="_KILL3" x="215.901" y="-95.533"/>
    <waypoint name="_KILL4" x="-186.688" y="5.17"/>
    <waypoint name="_HERE" x="6.0" y="-1.2"/>
  </waypoints>
  <sectors>
    <sector color="yellow" name="Survey">
      <corner name="D1"/>
      <corner name="D2"/>
      <corner name="D3"/>
      <corner name="D4"/>
    </sector>
    <sector color="orange" name="Flight_Area">
      <corner name="_FLY1"/>
      <corner name="_FLY2"/>
      <corner name="_FLY3"/>
      <corner name="_FLY4"/>
    </sector>
    <sector color="red" name="Kill">
      <corner name="_KILL1"/>
      <corner name="_KILL2"/>
      <corner name="_KILL3"/>
      <corner name="_KILL4"/>
    </sector>
  </sectors>
  <variables>
    <variable init="0" type="int" var="mission_nb"/>
    <variable init="20." var="goto_height" min="5." max="120." step="0.1"/>
    <variable init="7." var="goto_speed" min="0.5" max="10." step="0.1"/>
    <variable init="5." var="takeoff_height" min="0.5" max="15." step="0.1"/>
    <variable init="4." var="land_speed" min="0.5" max="10." step="0.1"/>
    <variable init="40." var="mapping_height" min="5." max="120." step="0.1"/>
    <variable init="40." var="mapping_sweep" min="5." max="20." step="0.1"/>
    <variable init="7." var="mapping_speed" min="0.5" max="10." step="0.1"/>
    <variable init="-1." var="mapping_radius" min="-1." max="100." step="1.0"/>
    <variable init="20." var="mapping_shot_distance" min="5." max="60." step="0.1"/>
    <variable init="15." var="dynamic_height" min="5." max="120." step="0.1"/>
    <variable init="6." var="dynamic_valid_height" min="1." max="10." step="0.1"/>
    <variable init="10." var="dynamic_speed" min="0.5" max="20." step="0.1"/>
    <variable init="50." var="endurance_height" min="5." max="120." step="0.1"/>
    <variable init="10." var="endurance_speed" min="0.5" max="20." step="0.1"/>
    <variable init="100." var="endurance_radius" min="-150." max="150." step="1.0"/>
    <variable init="500" type="int" var="endurance_time" min="1" max="1200" step="1"/>
    <variable init="20." var="hickers_height" min="5." max="120." step="0.1"/>
    <variable init="4." var="hickers_inner_radius" min="-60." max="60." step="1.0"/>
    <variable init="30." var="hickers_outer_radius" min="-60." max="60." step="1.0"/>
    <variable init="3." var="hickers_inner_speed" min="0.5" max="10." step="0.1"/>
    <variable init="6." var="hickers_outer_speed" min="0.5" max="10." step="0.1"/>
    <variable init="42." var="tag_distance"/>
    <variable init="14" type="int" var="nb_lap" min="2" max="20" step="1"/>
    <variable init="false" type="bool" var="tag_valid"/>
    <abi_binding name="JEVOIS_MSG" handler="fp_tag_cb"/>
  </variables>
  <modules>
    <module name="nav" type="takeoff_and_landing"/>
    <module name="nav" type="survey_hybrid">
      <define name="SURVEY_HYBRID_MAX_SWEEP_BACK" value="1"/>
      <define name="SURVEY_HYBRID_APPROACHING_TIME" value="0"/>
      <define name="SURVEY_HYBRID_ENTRY_DISTANCE" value="survey_private.sweep_distance"/>
    </module>
    <module name="tag_tracking">
      <define name="TAG_TRACKING_WP" value="WP_LANDPAD"/>
      <define name="TAG_TRACKING_SIM_WP" value="WP_TAG"/>
    </module>
    <module name="dynamic_inspection_imav2023"/>
  </modules>
  <exceptions>
    <exception cond="(!InsideFlight_Area(GetPosX(), GetPosY()) @OR GetPosAlt() @GT GetAltRef() + 100)
      @AND (nav_block @GT IndexOfBlock('Standby')) @AND (nav_block @LT IndexOfBlock('Kill landed'))" deroute="Standby"/>
    <exception cond="(!InsideKill(GetPosX(), GetPosY()) @OR GetPosAlt() @GT GetAltRef() + 120)
      @AND (nav_block == IndexOfBlock('Standby'))" deroute="Kill landed"/>
  </exceptions>
  <blocks>
    <block name="Wait GPS">
      <call_once fun="NavKillThrottle()"/>
      <while cond="!GpsFixValid()"/>
    </block>
    <block name="Geo init">
      <while cond="LessThan(NavBlockTime(), 10)"/>
    </block>
    <block name="Holding point">
      <call_once fun="NavKillThrottle()"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
    <block name="Start Engine">
      <call_once fun="NavResurrect()"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
    <block name="Takeoff" strip_button="Takeoff" strip_icon="takeoff.png">
      <exception cond="GetPosHeight() @GT takeoff_height @AND mission_nb == FP_NONE" deroute="Standby"/>
      <exception cond="GetPosHeight() @GT takeoff_height @AND mission_nb == FP_ENDURANCE" deroute="Run Endurance"/>
      <exception cond="GetPosHeight() @GT takeoff_height @AND mission_nb == FP_MAPPING" deroute="Goto Mapping"/>
      <exception cond="GetPosHeight() @GT takeoff_height @AND mission_nb == FP_HICKERS" deroute="Goto Hickers"/>
      <exception cond="GetPosHeight() @GT takeoff_height @AND mission_nb == FP_DYNAMIC" deroute="Goto Dynamic"/>
      <call_once fun="ins_reset_vertical_pos()"/>
      <call_once fun="NavResurrect()"/>
      <attitude pitch="0" roll="0" throttle="0.1" until="stage_time @GT 2" vmode="throttle"/>
      <call_once fun="NavSetWaypointHere(WP_LANDPAD)"/>
      <stay climb="nav.climb_vspeed" vmode="climb" wp="LANDPAD"/>
    </block>
    <block name="Standby" strip_button="Standby" strip_icon="home.png" group="home">
      <set var="mission_nb" value="FP_NONE"/>
      <call_once fun="guidance_h_SetMaxSpeed(land_speed)"/>
      <stay wp="STDBY"/>
    </block>

    <block group="mission" name="Start Endurance" strip_button="Endurance">
      <set var="mission_nb" value="FP_ENDURANCE"/>
      <deroute block="Takeoff"/>
    </block>
    <block group="mission" name="Start Mapping" strip_button="Mapping">
      <set var="mission_nb" value="FP_MAPPING"/>
      <deroute block="Takeoff"/>
    </block>
    <block group="mission" name="Start Area" strip_button="Hickers">
      <set var="mission_nb" value="FP_HICKERS"/>
      <deroute block="Takeoff"/>
    </block>
    <block group="mission" name="Start Dynamic" strip_button="Dynamic">
      <set var="mission_nb" value="FP_DYNAMIC"/>
      <deroute block="Takeoff"/>
    </block>

    <block name="Run Endurance">
      <!-- exception cond="electrical.bat_low" deroute="Landing"/-->
      <set var="mission_nb" value="FP_NONE"/>
      <call_once fun="jevois_stream(false)"/>
      <call_once fun="guidance_h_SetMaxSpeed(endurance_speed)"/>
      <circle wp="ENDURANCE" radius="endurance_radius" until="stage_time @GT endurance_time"/>
      <deroute block="Landing"/>
    </block>

    <block name="Goto Mapping">
      <set var="mission_nb" value="FP_NONE"/>
      <call_once fun="NavSetWaypointHere(WP__HERE)"/>
      <call_once fun="jevois_stream(false)"/>
      <call_once fun="guidance_h_SetMaxSpeed(mapping_speed)"/>
      <stay wp="_HERE" until="stage_time @GT 3" height="mapping_height"/>
      <go wp="D1" from="_HERE" hmode="route" height="mapping_height"/>
      <call_once fun="nav_survey_hybrid_setup_towards(WP_D1, WP_D2, 4, mapping_sweep, mapping_radius, mapping_height)"/>
      <deroute block="Run Mapping"/>
    </block>
    <block name="Run Mapping">
      <call_once fun="guidance_h_SetMaxSpeed(mapping_speed)"/>
      <call fun="nav_survey_hybrid_run()"/>
      <deroute block="Landing"/>
    </block>

    <block name="Goto Dynamic">
      <set var="mission_nb" value="FP_NONE"/>
      <call_once fun="NavSetWaypointHere(WP__HERE)"/>
      <call_once fun="jevois_stream(false)"/>
      <call_once fun="guidance_h_SetMaxSpeed(goto_speed)"/>
      <stay wp="_HERE" until="stage_time @GT 3" height="dynamic_height"/>
      <go from="_HERE" hmode="route" wp="START_DYN" height="dynamic_height"/>
      <call_once fun="dynamic_inspection_setup(WP_START_DYN, 4, dynamic_speed)"/>
      <deroute block="Wait Dynamic"/>
    </block>
    <block name="Wait Dynamic">
      <stay wp="START_DYN" height="dynamic_height"/>
    </block>
    <block name="Run Dynamic" strip_button="Run Dyn" group="mission">
      <call_once fun="guidance_h_SetMaxSpeed(dynamic_speed)"/>
      <!--path wpts="START_DYN,D1,D2,D3,D4,START_DYN"/-->
      <!--call fun="dynamic_inspection_run()"/-->
      <go wp="D1" from="START_DYN" hmode="route" height="avoid_height(dynamic_height, 20., 35., WP_P1)" approaching_time="4"/>
      <stay wp="D1" height="dynamic_valid_height" until="(GetPosHeight() @LT dynamic_valid_height + 1.) @OR (stage_time @GT 15)"/>
      <go wp="D2" from="D1" hmode="route" height="avoid_height(dynamic_height, 20., 35., WP_P1)" approaching_time="4"/>
      <stay wp="D2" height="dynamic_valid_height" until="(GetPosHeight() @LT dynamic_valid_height + 1.) @OR (stage_time @GT 15)"/>
      <go wp="D3" from="D2" hmode="route" height="avoid_height(dynamic_height, 20., 35., WP_P1)" approaching_time="4"/>
      <stay wp="D3" height="dynamic_valid_height" until="(GetPosHeight() @LT dynamic_valid_height + 1.) @OR (stage_time @GT 15)"/>
      <go wp="D4" from="D3" hmode="route" height="avoid_height(dynamic_height, 20., 35., WP_P1)" approaching_time="4"/>
      <stay wp="D4" height="dynamic_valid_height" until="(GetPosHeight() @LT dynamic_valid_height + 1.) @OR (stage_time @GT 15)"/>
      <go wp="START_DYN" from="D4" hmode="route" height="avoid_height(dynamic_height, 20., 35., WP_P1)"/>
      <deroute block="Landing"/>
    </block>

    <block name="Goto Hickers">
      <set var="mission_nb" value="FP_NONE"/>
      <call_once fun="NavSetWaypointHere(WP__HERE)"/>
      <call_once fun="jevois_stream(false)"/>
      <call_once fun="guidance_h_SetMaxSpeed(goto_speed)"/>
      <go wp="HICKERS" from="_HERE" hmode="route" height="hickers_height" approaching_time="4" pre_call="nav_set_heading_towards_waypoint(WP_HICKERS)"/>
    </block>
    <block name="Hickers Inner Circle">
      <call_once fun="guidance_h_SetMaxSpeed(hickers_inner_speed)"/>
      <circle wp="HICKERS" radius="hickers_inner_radius" height="hickers_height" until="NavCircleCount() @GT 1.5" pre_call="nav_set_heading_towards_waypoint(WP_HICKERS)"/>
    </block>
    <block name="Hickers Outer Circle">
      <call_once fun="guidance_h_SetMaxSpeed(hickers_outer_speed)"/>
      <circle wp="HICKERS" radius="hickers_outer_radius" height="hickers_height" until="NavCircleCount() @GT 1.5" pre_call="nav_set_heading_towards_waypoint(WP_HICKERS)"/>
      <deroute block="Landing"/>
    </block>

    <block name="Stay P1">
      <stay wp="P1"/>
    </block>
    <block name="Test Line">
      <call_once fun="guidance_h_SetMaxSpeed(dynamic_speed)"/>
      <path wpts="P1,P2,P1"/>
      <deroute block="Stay P1"/>
    </block>
    <block name="Test Distance">
      <call_once fun="guidance_h_SetMaxSpeed(dynamic_speed)"/>
      <for var="i" from="1" to="nb_lap">
        <path wpts="P1,P2,P1"/>
      </for>
      <deroute block="Stay P1"/>
    </block>

    <block name="Land here" strip_button="Land here" strip_icon="land-right.png" group="land">
      <call_once fun="NavSetWaypointHere(WP_LANDPAD)"/>
    </block>
    <block name="Landing" strip_button="Land on pad" group="land">
      <call_once fun="jevois_stream(false)"/>
      <call_once fun="NavSetWaypointHere(WP__HERE)"/>
      <call_once fun="guidance_h_SetMaxSpeed(goto_speed)"/>
      <go wp="LANDPAD" from="_HERE" hmode="route" height="goto_height"/>
    </block>
    <block name="Flare">
      <exception cond="!nav_is_in_flight()" deroute="Kill landed"/>
      <call_once fun="guidance_h_SetMaxSpeed(land_speed)"/>
      <call_once fun="jevois_stream(true)"/>
      <stay climb="2*nav.descend_vspeed" vmode="climb" wp="LANDPAD" until="GetPosHeight() @LT 10"/>
      <stay climb="nav.descend_vspeed" vmode="climb" wp="LANDPAD"/>
    </block>
    <block name="Kill landed">
      <call_once fun="NavKillThrottle()"/>
      <attitude pitch="0" roll="0" throttle="0" until="FALSE" vmode="throttle"/>
    </block>
  </blocks>
</flight_plan>
