<?xml version="1.0"?>
<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">
<flight_plan alt="260" ground_alt="185" lat0="43.46223" lon0="1.27289" max_dist_from_home="600" name="Carto Muret Fixed-wing" security_height="25">
  <header>
#include "modules/datalink/datalink.h"
static inline bool delay_test_rc(bool test, int delay) {
  static int nb = 0;
  if (test) {
    nb++;
    if (nb == delay) {
      nb = 0;
      return true;
    }
    return false;
  } else {
    nb = 0;
    return false;
  }
}
static inline bool delay_test_gf(bool test, int delay) {
  static int nb = 0;
  if (test) {
    nb++;
    if (nb == delay) {
      nb = 0;
      return true;
    }
    return false;
  } else {
    nb = 0;
    return false;
  }
}

#if DIGITAL_CAM
#define LINE_START_FUNCTION if (mapping_shot) { dc_Survey(mapping_shot_distance); } else { dc_autoshoot = DC_AUTOSHOOT_STOP; }
#define LINE_STOP_FUNCTION dc_autoshoot = DC_AUTOSHOOT_STOP;
#endif

#define NavQdrCloseToAxis(_from, _to) NavQdrCloseTo(DegOfRad(-atan2f(WaypointY(_to) - WaypointY(_from), WaypointX(_to) - WaypointX(_from))))
  </header>
  <waypoints>
    <waypoint name="HOME" x="0" y="0"/>
    <waypoint name="STDBY" x="51.408" y="113.202"/>
    <waypoint alt="185." name="TD" x="34.46" y="48.567"/>
    <waypoint alt="215." name="AF" x="209.6" y="-21.672"/>
    <waypoint name="_BASELEG" x="168.8" y="-13.8"/>
    <waypoint name="CLIMB" x="-115.975" y="178.638"/>
    <waypoint name="P1" x="142.986" y="55.749"/>
    <waypoint name="P2" x="-75.414" y="138.865"/>
    <waypoint name="_C1" x="197.917" y="39.928"/>
    <waypoint name="_C2" x="-144.25" y="135.4"/>
    <waypoint name="MAP1" x="148.557" y="-4.907"/>
    <waypoint name="MAP2" x="-113.196" y="97.662"/>
    <waypoint name="MAP3" x="-69.242" y="229.452"/>
    <waypoint name="MAP4" x="194.402" y="124.352"/>
    <waypoint name="ZBC" x="33.947" y="110.828"/>
    <waypoint name="ZBDIR" x="-17.57" y="131.723"/>
    <waypoint name="_KILL1" x="-183.737" y="350.583"/>
    <waypoint name="_KILL2" x="378.27" y="283.43"/>
    <waypoint name="_KILL3" x="337.85" y="-157.613"/>
    <waypoint name="_KILL4" x="-279.35" y="-33.914"/>
    <waypoint name="_FLY1" x="-141.471" y="296.527"/>
    <waypoint name="_FLY2" x="328.831" y="243.582"/>
    <waypoint name="_FLY3" x="286.258" y="-97.227"/>
    <waypoint name="_FLY4" x="-210.647" y="14.04"/>
  </waypoints>
  <sectors>
    <sector color="red" name="Kill">
      <corner name="_KILL1"/>
      <corner name="_KILL2"/>
      <corner name="_KILL3"/>
      <corner name="_KILL4"/>
    </sector>
    <sector color="green" name="Flight_Area">
      <corner name="_FLY1"/>
      <corner name="_FLY2"/>
      <corner name="_FLY3"/>
      <corner name="_FLY4"/>
    </sector>
    <sector color="yellow" name="Survey">
      <corner name="MAP1"/>
      <corner name="MAP2"/>
      <corner name="MAP3"/>
      <corner name="MAP4"/>
    </sector>
  </sectors>
  <variables>
    <variable init="30." var="mapping_height" min="20." max="120." step="1."/>
    <variable init="25." var="mapping_sweep" min="5." max="20." step="0.1"/>
    <variable init="300." var="mapping_length" min="50." max="600." step="10."/>
    <variable init="5." var="mapping_lines" min="3." max="15." step="0.1"/>
    <variable init="0" var="mapping_shot" min="0" max="1" step="1"/>
    <variable init="20." var="mapping_shot_distance" min="5." max="60." step="0.1"/>
  </variables>
  <modules>
    <module name="nav" type="survey_zamboni"/>
    <module name="nav" type="poles"/>
  </modules>
  <!--exceptions>
    <exception cond="(delay_test_rc(RCLost(),20) @AND
      !(IndexOfBlock('Takeoff') @GT nav_block) @AND
      !(nav_block >= IndexOfBlock('Land Right AF-TD')) @AND
      (autopilot.launch == true) )" deroute="EmergencyLanding"/>
    <exception cond="(datalink_time @GT 10 @AND
      !(IndexOfBlock('Takeoff') @GT nav_block) @AND
      !(nav_block >= IndexOfBlock('Land Right AF-TD')) @AND
      (autopilot.launch == true) )" deroute="EmergencyLanding"/>
    <exception cond="(delay_test_gf(!InsideFlyZone(GetPosX(), GetPosY()),10) @AND
      !(IndexOfBlock('Takeoff') @GT nav_block) @AND
      !(nav_block >= IndexOfBlock('Land Right AF-TD')) @AND
      (autopilot.launch == true) )" deroute="EmergencyLanding"/>
  </exceptions-->
  <blocks>
    <block name="Wait GPS">
      <set value="1" var="autopilot.kill_throttle"/>
      <while cond="!GpsFixValid()"/>
    </block>
    <block name="Geo init">
      <while cond="LessThan(NavBlockTime(), 10)"/>
    </block>
    <block name="Holding point">
      <set value="1" var="autopilot.kill_throttle"/>
      <attitude roll="0" throttle="0" vmode="throttle"/>
    </block>
    <block group="home" key="t" name="Takeoff" strip_button="Takeoff (wp CLIMB)" strip_icon="takeoff.png">
      <exception cond="GetPosAlt() @GT GetAltRef()+20" deroute="Endurance"/>
      <set value="0" var="autopilot.kill_throttle"/>
      <set value="0" var="autopilot.flight_time"/>
      <go from="HOME" pitch="30" throttle="0.8" vmode="throttle" wp="CLIMB"/>
      <deroute block="Align Zamboni"/>
    </block>
    <block group="home" key="Ctrl+a" name="Standby" strip_button="Standby" strip_icon="home.png">
      <circle radius="nav_radius" wp="STDBY"/>
    </block>
    <block name="Endurance" strip_button="Endurance" group="mission">
      <set var="mapping_shot" value="0"/>
      <call_once fun="nav_poles_init(WP_P1, WP_P2, WP__C1, WP__C2, nav_radius)"/>
      <oval p1="_C1" p2="_C2" radius="nav_radius" until="nav_oval_count==3"/>
      <deroute block="Align Zamboni"/>
    </block>
    <block name="Align Zamboni">
      <circle radius="nav_radius" until="NavQdrCloseToAxis(WP_STDBY,WP_ZBC) @AND fabsf(GetPosAlt() - WaypointAlt(WP_ZBC)) @LT 10." wp="STDBY"/>
    </block>
    <block group="mission" name="ZamboniSurvey" strip_button="Zamboni">
      <set var="mapping_shot" value="1"/>
      <call_once fun="pprzlink_cam_ctrl_set_expo(PPRZLINK_CAM_AUTO_EXPO)"/>
      <call_once fun="nav_survey_zamboni_setup(WP_ZBC, WP_ZBDIR, mapping_length, mapping_sweep, mapping_lines, GetAltRef()+mapping_height)"/>
      <call fun="nav_survey_zamboni_run()"/>
      <!--deroute block="Standby"/-->
      <deroute block="Land Right AF-TD"/>
    </block>
    <block group="land" name="Land Right AF-TD" strip_button="Land right (wp AF-TD)" strip_icon="land-right.png">
      <set value="DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="land"/>
    </block>
    <block group="land" name="Land Left AF-TD" strip_button="Land left (wp AF-TD)" strip_icon="land-left.png">
      <set value="-DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="land"/>
    </block>
    <block name="land">
      <call_once fun="nav_compute_baseleg(WP_AF, WP_TD, WP__BASELEG, nav_radius)"/>
      <circle radius="nav_radius" until="NavCircleCount() @GT 0.5" wp="_BASELEG"/>
      <circle radius="nav_radius" until="And(NavQdrCloseTo(DegOfRad(baseleg_out_qdr)-(nav_radius/fabs(nav_radius))*10), 10 @GT fabs(GetPosAlt() - WaypointAlt(WP__BASELEG)))" wp="_BASELEG"/>
    </block>
    <block name="final">
      <exception cond="GetAltRef() + 3 @GT GetPosAlt()" deroute="flare"/>
      <go from="AF" hmode="route" vmode="glide" wp="TD"/>
    </block>
    <block name="flare">
      <go exceeding_time="10" from="AF" hmode="route" throttle="0.0" vmode="throttle" wp="TD"/>
      <attitude roll="0.0" throttle="0.0" until="FALSE" vmode="throttle"/>
    </block>
    <block name="EmergencyLanding">
      <go throttle="0." vmode="throttle" wp="HOME"/>
      <attitude roll="0" throttle="0" vmode="throttle"/>
    </block>
  </blocks>
</flight_plan>
