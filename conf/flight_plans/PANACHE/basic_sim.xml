<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">
<!-- A simple flightplan for automated SITL/HITL verification: it launches and lands itself, giving us an idea whether a given airframe
     can finish it -->
<flight_plan alt="100" ground_alt="15" lat0="49.435990" lon0="1.068109" max_dist_from_home="15000" name="Basic" security_height="25" qfu="180">
  <header>
#include "modules/datalink/datalink.h"
</header>
  <waypoints>
    <waypoint name="HOME" x="0" y="0"/>
    <waypoint name="STDBY" x="49.5" y="100.1"/>
    <waypoint name="1" x="10.1" y="189.9"/>
    <waypoint name="2" x="132.3" y="139.1"/>
    <waypoint name="MOB" x="137.0" y="-11.6"/>
    <waypoint name="S1" x="-119.2" y="69.6"/>
    <waypoint name="S2" x="274.4" y="209.5"/>
    <waypoint alt="215.0" name="AF" x="177.4" y="45.1"/>
    <waypoint alt="185.0" name="TD" x="28.8" y="57.0"/>
    <waypoint name="_BASELEG" x="168.8" y="-13.8"/>
    <waypoint name="CLIMB" x="-160" y="-10"/>
    <waypoint name="SRC" x="-400" y="150" height="30"/>
  </waypoints>
  
  <variables>
    <variable var="a_stb" init="60.0" min="1.0" max="150.0" step="1.0"/>
    <variable var="b_stb" init="60.0" min="1.0" max="150.0" step="1.0"/>
    <variable var="panache_buf[4]" type="uint8_t" init="{0}"/>
  </variables>
  
  <modules>
    <module name="math"/>

    <!-- extra navigation routines -->
    <module name="nav" type="spiral_3D"/>
    <module name="gvf_module">
      <define name="GVF_OCAML_GCS" value="FALSE"/>
    </module>
    <module name="gvf_parametric"/> 
    <module name="mission_fw"/>
    <module name="gvf_mission"/>
  </modules>
  
  <exceptions>
    <!--exception cond="datalink_time @GT 22" deroute="Standby"/-->
  </exceptions>
  <blocks>
    <block name="Wait GPS">
      <set value="1" var="autopilot.kill_throttle"/>
      <while cond="!GpsFixValid()"/>
    </block>
    <block name="Geo init">
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call_once fun="NavSetGroundReferenceHere()"/>
    </block>
    <block name="Holding point">
      <set value="1" var="autopilot.kill_throttle"/>
      <attitude roll="0" throttle="0" vmode="throttle"/>
      <exception cond="NavBlockTime() @GT 10" deroute="Takeoff"/>
    </block>
    <block key="t" name="Takeoff" strip_button="Takeoff (wp CLIMB)" strip_icon="takeoff.png" group="home">
      <exception cond="GetPosAlt() @GT GetAltRef()+25" deroute="Standby"/>
      <set value="0" var="autopilot.kill_throttle"/>
      <set value="0" var="autopilot.flight_time"/>
      <set value="1" var="autopilot.launch"/>
      <set value="0" var="autopilot.kill_throttle"/>
      <go from="HOME" throttle="1.0" vmode="throttle" wp="CLIMB" pitch="15"/>
    </block>
    
    <block key="Ctrl+a" name="Standby" strip_button="Standby" strip_icon="home.png" group="home">
      <circle radius="nav_radius" wp="STDBY"/>
      <!--<exception cond="NavBlockTime() @GT 30" deroute="Figure 8 around wp 1"/>-->
    </block>
    
    <block name="Spiral RDV">
    	<call_once fun="gvf_parametric_set_w_gain(1.)"/>
    	<call_once fun="gvf_parametric_set_affine_tr(WaypointX(WP_SRC),WaypointY(WP_SRC),200 + 20 * (AC_ID-6),0.,90.,0.)"/>
    	<call fun="gvf_parametric_3d_sin(500 + 10 * AC_ID,3,90 * AC_ID, 500 + 10 * AC_ID,3,90 * (AC_ID+1))"/>
    	<!--<set var="gvf_ellipse_par.a" value="200 + 10*AC_ID"/>
    	<set var="gvf_ellipse_par.b" value="200 + 10*AC_ID"/>
    	<call fun="gvf_ellipse_wp(WP_SRC,gvf_ellipse_par.a, gvf_ellipse_par.b, gvf_ellipse_par.alpha)"/>-->
    </block>
        
    <block name="Downwind sinus">
      <call_once fun="gvf_parametric_set_w_gain(1.)"/>
      <call_once fun="gvf_parametric_set_direction(1)"/>
      <!--<call_once fun="gvf_parametric_set_affine_tr(WaypointX(WP_SRC),WaypointY(WP_SRC),200 + 20 * (AC_ID-6),0.,0.,50.)"/>-->
      <call_once fun="gvf_parametric_set_affine_tr(WaypointX(WP_SRC),WaypointY(WP_SRC),200 + 120 * (AC_ID-5),0.,0.,-atan2(stateGetHorizontalWindspeed_f()->y,stateGetHorizontalWindspeed_f()->x)*180/M_PI)"/>
      <call fun="gvf_parametric_3d_sin(500,0.001,90 * (AC_ID+1), 50,0.0005,90 * AC_ID)"/>
      
      <!--<call fun="gvf_parametric_3d_ellipse_wp_delta(WP_SRC, 200,200,30,atan2(stateGetHorizontalWindspeed_f()->x,stateGetHorizontalWindspeed_f()->y))"/>-->
    </block>
    
    <block name="Downind growing Lissajou">
      <call_once fun="gvf_parametric_set_w_gain(1.)"/>
      <call_once fun="gvf_parametric_set_direction(1)"/>
      <!--<call_once fun="gvf_parametric_set_affine_tr(WaypointX(WP_SRC),WaypointY(WP_SRC),200 + 20 * (AC_ID-6),0.,0.,50.)"/>-->
      <call_once fun="gvf_parametric_set_affine_tr(WaypointX(WP_SRC),WaypointY(WP_SRC),200 + 120 * (AC_ID-5),0.,0.,-atan2(stateGetHorizontalWindspeed_f()->y,stateGetHorizontalWindspeed_f()->x)*180/M_PI)"/>
      <call fun="gvf_parametric_3d_growing_lissajou(10,500,25,0.00001,90 * (AC_ID+1),0.000005,90 * AC_ID)"/>
    </block>
    
    <block name="Mission GVF">
    	<while cond="TRUE">
    		<call fun="mission_run()"/>
    	</while>
    </block>
    
    <block key="F8" name="Figure 8 around wp 1" strip_button="Figure 8 (wp 1-2)" strip_icon="eight.png" group="base_pattern">
      <eight center="1" radius="nav_radius" turn_around="2"/>
      <exception cond="NavBlockTime() @GT 120" deroute="Oval 1-2"/>
    </block>
    <block name="Oval 1-2" strip_button="Oval (wp 1-2)" strip_icon="oval.png" group="base_pattern">
      <oval p1="1" p2="2" radius="nav_radius"/>
      <exception cond="NavBlockTime() @GT 90" deroute="Survey S1-S2"/>
    </block>
    <block name="Survey S1-S2" strip_button="Survey (wp S1-S2)" strip_icon="survey.png" group="extra_pattern">
      <survey_rectangle grid="150" wp1="S1" wp2="S2"/>
      <exception cond="NavBlockTime() @GT 180" deroute="Path 1,2,S1,S2,STDBY"/>
    </block>
    <block name="Path 1,2,S1,S2,STDBY" strip_button="Path (1,2,S1,S2,STDBY)" strip_icon="path.png" group="extra_pattern">
      <path wpts="1,2 S1"/>
      <path wpts="S1, S2 STDBY" approaching_time="1" pitch="auto" throttle="0.4"/>
      <deroute block="MOB"/>
    </block>
    <block name="MOB" strip_button="Circle around here" strip_icon="mob.png" group="base_pattern">
      <call_once fun="NavSetWaypointHere(WP_MOB)"/>
      <set value="DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <circle radius="nav_radius" wp="MOB"/>
      <exception cond="NavBlockTime() @GT 90" deroute="Land Right AF-TD"/>
    </block>
    <block name="Land Right AF-TD" strip_button="Land right (wp AF-TD)" strip_icon="land-right.png" group="land">
      <set value="DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="land"/>
    </block>
    <block name="land">
      <call_once fun="nav_compute_baseleg(WP_AF, WP_TD, WP__BASELEG, nav_radius)"/>
      <circle radius="nav_radius" until="NavCircleCount() @GT 0.5" wp="_BASELEG"/>
      <circle radius="nav_radius" until="And(NavQdrCloseTo(DegOfRad(baseleg_out_qdr)-(nav_radius/fabs(nav_radius))*10), 10 @GT fabs(GetPosAlt() - WaypointAlt(WP__BASELEG)))" wp="_BASELEG"/>
    </block>
    <block name="final">
      <exception cond="GetAltRef() + 10 @GT GetPosAlt()" deroute="flare"/>
      <go from="AF" hmode="route" vmode="glide" wp="TD"/>
    </block>
    <block name="flare">
      <go approaching_time="0" from="AF" hmode="route" throttle="0.0" vmode="throttle" wp="TD"/>
      <attitude roll="0.0" throttle="0.0" until="FALSE" vmode="throttle"/>
    </block>
  </blocks>
</flight_plan>
