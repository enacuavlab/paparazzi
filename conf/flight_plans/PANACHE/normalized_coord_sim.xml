<!DOCTYPE flight_plan SYSTEM "../flight_plan.dtd">
<!-- A simple flightplan for automated SITL/HITL verification: it launches and lands itself, giving us an idea whether a given airframe
     can finish it -->
<flight_plan alt="100" ground_alt="15" lat0="49.435990" lon0="1.068109" max_dist_from_home="15000" name="Basic" security_height="25" qfu="180">
  <header>
#include "modules/datalink/datalink.h"
</header>
  <waypoints>
    <waypoint name="HOME" x="0" y="0"/>
    <waypoint name="STDBY" x="49.5" y="100.1"/>
    <waypoint alt="215.0" name="AF" x="177.4" y="45.1"/>
    <waypoint alt="185.0" name="TD" x="28.8" y="57.0"/>
    <waypoint name="_BASELEG" x="168.8" y="-13.8"/>
    <waypoint name="CLIMB" x="-160" y="-10"/>
    <waypoint name="SRC" lat="49.4367794" lon="1.0616604" height="30"/>
  </waypoints>
  
  <variables>
    <variable var="a_stb" init="60.0" min="1.0" max="150.0" step="1.0"/>
    <variable var="b_stb" init="60.0" min="1.0" max="150.0" step="1.0"/>
    <variable var="panache_buf[4]" type="uint8_t" init="{0}"/>
  </variables>
  
  <modules>
    <module name="math"/>

    <!-- extra navigation routines -->
    <module name="nav" type="spiral_3D"/>
    <module name="gvf_module">
      <define name="GVF_OCAML_GCS" value="FALSE"/>
    </module>
    <module name="gvf_parametric">
    	<!-- Turn on coordination -->
    	<define name="GVF_PARAMETRIC_COORDINATION_COORDINATION" value="1"/>
    </module>
    <module name="mission_fw"/>
    <module name="gvf_mission"/>
  </modules>
  
  <exceptions>
    <!--exception cond="datalink_time @GT 22" deroute="Standby"/-->
  </exceptions>
  <blocks>
    <block name="Wait GPS">
      <set value="1" var="autopilot.kill_throttle"/>
      <while cond="!GpsFixValid()"/>
    </block>
    <block name="Geo init">
      <while cond="LessThan(NavBlockTime(), 10)"/>
      <call_once fun="NavSetGroundReferenceHere()"/>
    </block>
    <block name="Holding point">
      <set value="1" var="autopilot.kill_throttle"/>
      <attitude roll="0" throttle="0" vmode="throttle"/>
      <exception cond="NavBlockTime() @GT 10" deroute="Takeoff"/>
    </block>
    <block key="t" name="Takeoff" strip_button="Takeoff (wp CLIMB)" strip_icon="takeoff.png" group="home">
      <exception cond="GetPosAlt() @GT GetAltRef()+25" deroute="Standby"/>
      <set value="0" var="autopilot.kill_throttle"/>
      <set value="0" var="autopilot.flight_time"/>
      <set value="1" var="autopilot.launch"/>
      <set value="0" var="autopilot.kill_throttle"/>
      <go from="HOME" throttle="1.0" vmode="throttle" wp="CLIMB" pitch="15"/>
    </block>
    
    <block key="Ctrl+a" name="Standby" strip_button="Standby" strip_icon="home.png" group="home">
      <circle radius="nav_radius" wp="STDBY"/>
      <exception cond="NavBlockTime() @GT 30" deroute="Downind drifting ellipse"/>
    </block>
    
    <block name="Spiral RDV">
    	<set value="0.01" var="gvf_parametric_control.beta"/>
    	<call_once fun="gvf_parametric_set_affine_tr(WaypointX(WP_SRC),WaypointY(WP_SRC),200 + 20 * (AC_ID % 10),0.,90.,0.)"/>
    	<call fun="gvf_parametric_3d_sin(500 + 10 * (AC_ID % 10),3,90 * AC_ID, 500 + 10 * (AC_ID % 10),3,90 * ((AC_ID % 10)+1))"/>
    	<!--<set var="gvf_ellipse_par.a" value="200 + 10*AC_ID"/>
    	<set var="gvf_ellipse_par.b" value="200 + 10*AC_ID"/>
    	<call fun="gvf_ellipse_wp(WP_SRC,gvf_ellipse_par.a, gvf_ellipse_par.b, gvf_ellipse_par.alpha)"/>-->
    </block>
        
    <block name="3D Lissajous">
      <set value="1" var="gvf_parametric_control.beta"/>
      <set value="1" var="gvf_parametric_control.L"/>
      <set value="0.042" var="gvf_parametric_3d_lissajous_par.kx"/>
      <set value="0.042" var="gvf_parametric_3d_lissajous_par.ky"/>
      <set value="0.0525" var="gvf_parametric_3d_lissajous_par.kz"/>
      <set value="1" var="gvf_parametric_coordination.kc"/>
      <call_once fun="gvf_parametric_set_direction(-1)"/>
      <call fun="gvf_parametric_3d_lissajous_XYZ(WaypointX(WP_SRC),WaypointY(WP_SRC),400,225,225,-20,1,2,2,0,90,0,0)"/>
    </block>
        
    <block name="Downwind sinus">
      <set value="1." var="gvf_parametric_control.L"/>
      <set value="0.01" var="gvf_parametric_control.beta"/>
      <call_once fun="gvf_parametric_set_direction(-1)"/>
      <!--<call_once fun="gvf_parametric_set_affine_tr(WaypointX(WP_SRC),WaypointY(WP_SRC),200 + 20 * (AC_ID-6),0.,0.,50.)"/>-->
      <call_once fun="gvf_parametric_set_affine_tr(WaypointX(WP_SRC),WaypointY(WP_SRC),200 + 120 * ((AC_ID % 10)),0.,0.,-atan2(stateGetHorizontalWindspeed_f()->y,stateGetHorizontalWindspeed_f()->x)*180/M_PI)"/>
      <call fun="gvf_parametric_3d_sin(500,0.001,90 * ((AC_ID % 10)+1), 50,0.0005,90 * (AC_ID % 10))"/>
      
      <!--<call fun="gvf_parametric_3d_ellipse_wp_delta(WP_SRC, 200,200,30,atan2(stateGetHorizontalWindspeed_f()->x,stateGetHorizontalWindspeed_f()->y))"/>-->
    </block>
    
    <block name="Downind growing Lissajous">
      <set value="1" var="gvf_parametric_control.L"/>
      <set value="1" var="gvf_parametric_control.beta"/>
      <set value="0.21" var="gvf_parametric_3d_growing_lissajou_par.kx"/>
      <set value="0.21" var="gvf_parametric_3d_growing_lissajou_par.ky"/>
      <set value="0.21" var="gvf_parametric_3d_growing_lissajou_par.kz"/>
      <set value="0.01" var="gvf_parametric_coordination.kc"/>
      <set value="1" var="gvf_parametric_control.beta"/>
      <call_once fun="gvf_parametric_set_direction(-1)"/>
      <!--<call_once fun="gvf_parametric_set_affine_tr(WaypointX(WP_SRC),WaypointY(WP_SRC),200 + 20 * (AC_ID-6),0.,0.,50.)"/>-->
      <call_once fun="gvf_parametric_set_affine_tr(WaypointX(WP_SRC),WaypointY(WP_SRC),200 + 120 * (AC_ID % 10),0.,0.,atan2(stateGetHorizontalWindspeed_f()->x,stateGetHorizontalWindspeed_f()->y))"/>
      <call fun="gvf_parametric_3d_growing_lissajou(1,0.5,0.01,0.003,90 * (AC_ID % 10),0.002,90 * (AC_ID % 10))"/>
    </block>
    
    <block name="Downind drifting ellipse">
      <set value="1" var="gvf_parametric_control.beta"/>
      <set value="1." var="gvf_parametric_control.L"/>
      <set value="0.06" var="gvf_parametric_drift_ellipse_par.kx"/>
      <set value="0.06" var="gvf_parametric_drift_ellipse_par.ky"/>
      <set value="0.06" var="gvf_parametric_drift_ellipse_par.kz"/>
      <set value="1" var="gvf_parametric_coordination.kc"/>
      <set value="400" var="gvf_parametric_control.w"/>
      <call_once fun="gvf_parametric_set_direction(-1)"/>
      <!--<call_once fun="gvf_parametric_set_affine_tr(WaypointX(WP_SRC),WaypointY(WP_SRC),200 + 20 * (AC_ID-6),0.,0.,50.)"/>-->
      <!-- For Lubrizol experiment, middleline fitter with equation y = m*x+b; m = 0.853, b = 56.051 -->
      <call_once fun="gvf_parametric_set_affine_tr(WaypointX(WP_SRC),WaypointY(WP_SRC)+56.051,200 * (AC_ID % 10),0.,0.,(180/M_PI)*atan2(1.,0.853))"/>
      
      <call fun="gvf_parametric_3d_drift_ellipse(1,0.2,tan(M_PI/8),0.005,(2*M_PI/3) * AC_ID)"/>
    </block>
    
    <block name="Mission GVF">
    	<while cond="TRUE">
    		<call fun="mission_run()"/>
    	</while>
    </block>
    
    <block name="Land Right AF-TD" strip_button="Land right (wp AF-TD)" strip_icon="land-right.png" group="land">
      <set value="DEFAULT_CIRCLE_RADIUS" var="nav_radius"/>
      <deroute block="land"/>
    </block>
    <block name="land">
      <call_once fun="nav_compute_baseleg(WP_AF, WP_TD, WP__BASELEG, nav_radius)"/>
      <circle radius="nav_radius" until="NavCircleCount() @GT 0.5" wp="_BASELEG"/>
      <circle radius="nav_radius" until="And(NavQdrCloseTo(DegOfRad(baseleg_out_qdr)-(nav_radius/fabs(nav_radius))*10), 10 @GT fabs(GetPosAlt() - WaypointAlt(WP__BASELEG)))" wp="_BASELEG"/>
    </block>
    <block name="final">
      <exception cond="GetAltRef() + 10 @GT GetPosAlt()" deroute="flare"/>
      <go from="AF" hmode="route" vmode="glide" wp="TD"/>
    </block>
    <block name="flare">
      <go approaching_time="0" from="AF" hmode="route" throttle="0.0" vmode="throttle" wp="TD"/>
      <attitude roll="0.0" throttle="0.0" until="FALSE" vmode="throttle"/>
    </block>
  </blocks>
</flight_plan>
